services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - python-backend
      - frontend

  frontend:
    env_file:
      - ./frontend/.env
    restart: always
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
            - .next/
        - action: rebuild
          path: ./frontend/package.json
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
          cpus: "1.0"
    expose:
      - "3000"

  python-backend:
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: "1.0"
    build: ./backend
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/myapp
    depends_on:
      - db
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./uv.lock

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres_data:
    name: myapp_postgres_data
